{"version":3,"sources":["Main/Total/total.component.jsx","Main/Form/input.component.jsx","Main/main.container.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["TotalComponent","props","className","CustomerTip","CustomerBill","FormInputComponent","Icon","icon","type","placeholder","Placeholder","value","Value","onChange","onFocus","onClick","MainContainerComponent","customTipInput","React","createRef","defaultState","customers","bill","tip","tipPercent","reset","tipPerCustomer","toFixed","billPerCustomer","state","inputBillChange","event","_currentValue","target","undefined","resetStatus","setState","calcTotalBill","inputCustomerChange","inputCustomTip","setTipBtnStyle","updateTipAmount","current","parentElement","Array","from","children","forEach","ele","classList","contains","remove","add","status","forceReset","tipAmout","isFinite","selectInput","focus","select","faUser","this","map","index","e","ref","faDollarSign","disabled","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3de10b7.chunk.js","sourcesContent":["import React from 'react'\nimport \"./total.component.css\"\n\nfunction TotalComponent(props) {\n    return (\n        <div>\n            <div className=\"subtotal-content\">\n                <label>Tip Amount <em>/ person</em></label>\n                <div className=\"subtotal-amount\">${props.CustomerTip}</div>\n            </div>\n            <div className=\"subtotal-content\">\n                <label>Total <em>/ person</em></label>\n                <div className=\"subtotal-amount\">${props.CustomerBill}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotalComponent\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport \"./input.component.css\"\n\nfunction FormInputComponent(props) {\n    return (\n        <div className=\"form-icon\">\n            { props.Icon ? <FontAwesomeIcon icon={props.Icon} className=\"icon\"/> : \"\"}\n            <input type=\"text\" className=\"form-control input-text text-right\" placeholder={props.Placeholder}  value={props.Value} onChange={props.onChange} onFocus={props.onClick}/>\n        </div>\n    )\n}\n\nexport default FormInputComponent\n","import React, { Component } from 'react'\nimport \"./main.container.component.css\"\nimport TotalComopnent from './Total/total.component'\nimport FormInputComponent from './Form/input.component'\nimport { faDollarSign, faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport class MainContainerComponent extends Component {\n    customTipInput = React.createRef();\n    defaultState = {\n        customers: '',\n        bill: '',\n        tip: '',\n        tipPercent: 0,\n        reset: true,\n        tipPerCustomer: (0).toFixed(2),\n        billPerCustomer: (0).toFixed(2)\n    }\n    state = {...this.defaultState}\n\n    inputBillChange = (event) => {\n        const _currentValue = event.target.value;\n        if (_currentValue !== undefined && _currentValue !== null) {\n            this.resetStatus(false)\n        }\n        this.setState({ bill: _currentValue }, this.calcTotalBill);\n    }\n\n    inputCustomerChange = (event) => {\n        const _currentValue = event.target.value;\n        if (_currentValue !== undefined && _currentValue !== null) {\n            this.resetStatus(false)\n        }\n        this.setState({ customers: _currentValue }, this.calcTotalBill);\n    }\n    inputCustomTip = (event) => {\n        this.setTipBtnStyle(event.target);\n        const _currentValue = event.target.value;\n        if (_currentValue !== undefined && _currentValue !== null) {\n            this.resetStatus(false)\n        }\n        this.setState({ tip: _currentValue, tipPercent: 0 }, this.calcTotalBill);\n    }\n    updateTipAmount = (tipPercent) => {\n        if (this.customTipInput?.current) {\n            this.customTipInput.current.value = null;\n        }\n        this.setState({ tipPercent: tipPercent, tip: 0 }, this.calcTotalBill)\n    }\n\n    setTipBtnStyle = (target) => {\n        if (target && target.parentElement) {\n            Array.from(target.parentElement.children).forEach(ele => {\n                if (ele.classList.contains(\"active\")) {\n                    ele.classList.remove(\"active\")\n                }\n            })\n        }\n        target.classList.add(\"active\")\n    }\n\n    resetStatus = (status, forceReset) => {\n        this.setState({ reset: status });\n        if (forceReset === true) {\n            this.setState({...this.defaultState});\n            if (this.customTipInput?.current) {\n                const target = this.customTipInput.current;\n                this.customTipInput.current.value = null;\n                if (target && target.parentElement) {\n                    Array.from(target.parentElement.children).forEach(ele => {\n                        if (ele.classList.contains(\"active\")) {\n                            ele.classList.remove(\"active\")\n                        }\n                    })\n                }\n            }\n        }\n    }\n\n    calcTotalBill = () => {\n        let tipAmout = this.state.tip;\n        if (isFinite(this.state.tipPercent) && this.state.tipPercent > 0) {\n            const _bill = this.state.bill;\n            tipAmout = (_bill * this.state.tipPercent) / 100;\n        }\n        const tipPerCustomer = tipAmout / this.state.customers;\n        const billPerCustomer = (this.state.bill / this.state.customers);\n        if(isFinite(billPerCustomer) && isFinite(tipPerCustomer)){\n            this.setState({ tipPerCustomer: tipPerCustomer.toFixed(2) })\n            this.setState({ billPerCustomer: (billPerCustomer + tipPerCustomer).toFixed(2) })\n        }\n    }\n\n    selectInput = (event)=>{\n        event.target.focus();\n        event.target.select();\n    }\n\n    render() {\n        return (\n            <div className=\"main-container\">\n                <div className=\"main-container-row\">\n                    <div className=\"calc-container\">\n                        <div className=\"form-input-row\">\n                            <label>Bill</label>\n                            <FormInputComponent Icon={faUser} Value={this.state.bill}  Placeholder=\"0\"  onChange={this.inputBillChange} onClick={this.selectInput} />\n                        </div>\n                        <div className=\"form-input-row\">\n                            <label>Select Tip %</label>\n                            <div className=\"tip-select-grid\">\n                                {[5, 10, 15, 25, 50].map((tip, index) => <button className=\"form-control\" onClick={(e) => { this.setTipBtnStyle(e.target); this.updateTipAmount(tip) }} key={index} > {tip}%</button>)}\n                                <input type=\"text\" className=\"form-control input-text text-center\" placeholder=\"$$\" onChange={this.inputCustomTip} ref={this.customTipInput} onClick={this.selectInput}  />\n                            </div>\n                        </div>\n                        <div className=\"form-input-row\">\n                            <label>Number of People</label>\n                            <FormInputComponent Icon={faDollarSign} Value={this.state.customers} Placeholder=\"0\" onChange={this.inputCustomerChange}  onClick={this.selectInput}  />\n                        </div>\n                    </div>\n                    <div className=\"total-container\">\n                        <TotalComopnent CustomerBill={this.state.billPerCustomer} CustomerTip={this.state.tipPerCustomer} />\n                        <button className=\"form-control\" disabled={this.state.reset} type=\"reset\" onClick={() => this.resetStatus(true, true)}>RESET</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainContainerComponent\n","import './App.css';\nimport MainContainerComponent from './Main/main.container.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <MainContainerComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}